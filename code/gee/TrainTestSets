/*
Разбивает множество примеров на обучающее и тестовое.

Нужно для того, чтобы в разных скриптах были использованы одни и те же 
полигоны для одних и тех же целей (чтобы один скрипт не тестировался на полигонах,
которые использовались для обучения в другом скрипте).

*/


var SEED  = 0;
var THRESHOLD = 0.67;  // 67% of polygons are train set, other are test set


// Изменения

var noChange = ee.FeatureCollection('users/iglushko/FE2018/trainings2017merge_nochange');
var change = ee.FeatureCollection('users/iglushko/FE2018/trainings2017merge_logging');

var mergedData = change.map(function(f){
  var name = ee.String(f.get('name'));
  var slice_num = ee.Number(f.get('Slice'));
  return ee.Feature(f.geometry(), {'slice': slice_num, 'name': name});
}).merge(noChange.map(function(f){
  return ee.Feature(f.geometry(), {'slice': -1, 'name': 'No-Change'});
})).randomColumn('RND', SEED);


var testSet = mergedData.filter(ee.Filter.gte('RND', THRESHOLD));
var trainSet = mergedData.filter(ee.Filter.lt('RND', THRESHOLD));


/*
// Для удобства работы некоторых скриптов экспортируем полигоны в виде растров
// (запускается один раз)


var fe_mask = ee.FeatureCollection('users/iglushko/FE/aoife');

var trainRaster = trainSet.reduceToImage(['slice'], ee.Reducer.first());
Export.image.toAsset({
  image: trainRaster,
  description: 'TrainPolygons',
  assetId: 'TrainData/train',
  scale: 60,
  region: fe_mask,
  maxPixels: 2000000000
});

var testRaster = testSet.reduceToImage(['slice'], ee.Reducer.first());
Export.image.toAsset({
  image: trainRaster,
  description: 'TestPolygons',
  assetId: 'TrainData/test',
  scale: 60,
  region: fe_mask,
  maxPixels: 2000000000
});

*/


// Облака

/* 
var clouds=ee.FeatureCollection('users/iglushko/FE2018/LE2017cloud');
var nocloud=ee.FeatureCollection('users/iglushko/FE2018/LE2017nocloud');

var train_clouds = clouds.map(function(f){
  var name = ee.String(f.get('NAME_C'));
  var slice_num = ee.Number.parse(name.slice(4));
  return ee.Feature(f.geometry(), {'found_slice': slice_num});
}).merge(nocloud.map(function(f){
  return ee.Feature(f.geometry(), {'found_slice': '-1'});
}));

*/

exports.SETS={
  test: testSet,
  train: trainSet
};

